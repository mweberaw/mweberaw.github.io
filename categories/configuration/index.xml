<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration on Otherland</title><link>https://mweberaw.github.io/categories/configuration/</link><description>Recent content in Configuration on Otherland</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 23 Mar 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://mweberaw.github.io/categories/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>ownCloud update not working without useful error message</title><link>https://mweberaw.github.io/post/2014-03-23-owncloud-update-not-working-without-useful-error-message/</link><pubDate>Sun, 23 Mar 2014 00:00:00 +0000</pubDate><guid>https://mweberaw.github.io/post/2014-03-23-owncloud-update-not-working-without-useful-error-message/</guid><description>Today, the most annoying thing happened to me. I wanted to update my ownCloud instance from version 6.0.0a to the newest version 6.0.2. In principle, this should be an easy task. Simply login as an admin user, go to Settings (top right) -&amp;gt; Admin -&amp;gt; Update Center. Afterwards, click on the update tab and simply click update.
But after waiting a few seconds, the process died with the most useless error message I ever saw: â€œPlease fix this and retry!</description></item><item><title>Apache 2.2 with PHP using FCGID module</title><link>https://mweberaw.github.io/post/2013-10-26-apache-2-2-with-php-using-fcgid-module/</link><pubDate>Sat, 26 Oct 2013 00:00:00 +0000</pubDate><guid>https://mweberaw.github.io/post/2013-10-26-apache-2-2-with-php-using-fcgid-module/</guid><description>When using the Apachewebserver, you have multiple possibilities to integrate PHP.
One is to use mod_php. This module integrates PHP directly into the server itself. PHP is started when the server starts and runs under the same user as the Apache server itself.
An alternative configuration is to start a new PHP process for each request that serves a PHP script. This is know as CGI and is quite well supported by PHP and Apache alike.</description></item><item><title>Multiple SSL Certificates on Same IP</title><link>https://mweberaw.github.io/post/2013-09-17-multiple-ssl-certificates-on-same-ip/</link><pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate><guid>https://mweberaw.github.io/post/2013-09-17-multiple-ssl-certificates-on-same-ip/</guid><description>The days where http was the standard for communication over the internet should be over. Most of the connections should be encrypted between the server and the client. In this case we are talking about SSL encryption between the web server and the browser.
Most users that have their own VServer have a single IP. SSL certificates that work for multiple subdomains (wildcard certificates) are very expensive. The solution seams to be to have multiple certificates, one for each subdomain.</description></item><item><title>Backing up a linux vserver using a Synology Diskstation</title><link>https://mweberaw.github.io/post/2013-09-08-backing-up-a-linux-vserver-using-a-synology-diskstation/</link><pubDate>Sun, 08 Sep 2013 00:00:00 +0000</pubDate><guid>https://mweberaw.github.io/post/2013-09-08-backing-up-a-linux-vserver-using-a-synology-diskstation/</guid><description>If you have your own linux vserver or root server, you most probably also have information on this server that you do not want to lose. Backing up the data of the server is the most crucial part in avoiding information loss by anything that can happen to your server. For those who have a Synology Diskstation, this task is not too complex.
First make sure rsync is installed on the server you have to backup.</description></item><item><title>SCM-Manager behind a proxy (NGINX)</title><link>https://mweberaw.github.io/post/2013-08-27-scm-manager-behind-a-proxy-nginx/</link><pubDate>Tue, 27 Aug 2013 00:00:00 +0000</pubDate><guid>https://mweberaw.github.io/post/2013-08-27-scm-manager-behind-a-proxy-nginx/</guid><description>When configuring my vserver, I came upon a problem of configuring a subdomain for SCM-Manager.
My plan was to run an instance of SCM-Manager to manage git and mercurial repositories. Mostly to have a simple web interface and secondly to test the system for suitability in a production environment. The plan was to have a separate subdomain for all kinds of version control systems, in my case scm.weber-inter.net.
Since I had already configured an instance of NGINX, I added a proxy instance for my subdomain proxying requests to the preconfigured SCM-Manager server.</description></item></channel></rss>